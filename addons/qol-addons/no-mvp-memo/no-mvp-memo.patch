--- a/src/map/skill.c
+++ b/src/map/skill.c
@@ -7245,6 +7245,35 @@ int skill_castend_nodamage_id (struct block_list *src, struct block_list *bl, uint16 skill_id, uint16 skill_lv, unsigned int tick, int flag)
 			if( !map[m].flag.town && !pc_has_permission(sd,PC_PERM_WARP_ANYWHERE) ) {
 				clif_skill_fail(sd,skill_id,USESKILL_FAIL_LEVEL,0);
 				break;
+			}
+			// Check if current map is an MVP map
+			const char* mvp_maps[] = {
+				"gld_dun03",  // Amon Ra
+				"abbey02",    // Fallen Bishop
+				"abbey03",    // Beelzebub
+				"thor_v03",   // Storm Knight
+				"moc_pryd04", // Osiris
+				"moc_fild17", // Phreeoni
+				"prt_maze03", // Baphomet
+				"gef_dun02",  // Doppelganger
+				"treasure02", // Drake
+				"pay_fild11", // Eddga
+				"xmas_fild01",// Garm
+				"prt_sewb4",  // Golden Thief Bug
+				"mosk_dun03", // Gopinich
+				"kh_dun02",   // Kiel D-01
+				"ant_hell02", // Maya
+				"mjolnir_04", // Mistress
+				"pay_dun04",  // Moonlight Flower
+				"gef_fild03", // Orc Hero
+				"gef_fild10", // Orc Lord
+				"in_sphinx5", // Pharaoh
+				"beach_dun",  // Tao Gunka
+				"than_dun2",  // Thanatos
+				"jupe_core"   // Vesper
+			};
+			if (in_array(map[m].name, mvp_maps, sizeof(mvp_maps)/sizeof(mvp_maps[0]))) {
+				clif_messagecolor(&sd->bl,color_table[COLOR_RED], "You cannot use /memo on MVP maps.",false,SELF);
+				break;
 			}
 			pc_skill_memo(sd,map_id2index(m));
 		}
``` 